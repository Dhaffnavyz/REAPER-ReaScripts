/**
 * JSFX Name: MIDI notes sequence from CSV file
 * About: Play a melody from a notes list, based on one single keyboard input
     Designed for use with Makey Makey, but can be used for any workflow.
 * Screenshot: https://www.youtube.com/watch?v=mUqEd67xNZw
 * Author: X-Raym
 * Author URI: https://www.extremraym.com
 * Links:
     Article https://www.extremraym.com/en/midi-makey-sequence/
     Forum Thread http://forum.cockos.com/showthread.php?t=181105
 * Donation: http://www.extremraym.com/en/donation
 * Licence: GPL v3
 * REAPER: 5.0
 * Version: 2.0.1
 */

/**
 * Changelog:
 * v2.0.1 (2017-09-18)
  # Channel fix
  # Sequence position reinitialized when file is changed
 * v2.0 (2017-09-17)
  # Change CSV separator from . to , This is not compatible with v1 workflow
  + Works with MIDI channels in CSV files
  + Basic GUI
 * v1.0 (2016-09-21)
  + Initial Release
 */

desc:MIDI notes sequence from CSV file

slider1:0<0,16,1{Any,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Input Channel

slider3:49<0,127,1{Any,0: C-1,1: Db-1,2: D-1,3: Eb-1,4: E-1,5: F-1,6: Gb-1,7: G-1,8: Ab-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: Db0,14: D0,15: Eb0,16: E0,17: F0,18: Gb0,19: G0,20: Ab0,21: A0,22: Bb0,23: B0,24: C1,25: Db1,26: D1,27: Eb1,28: E1,29: F1,30: Gb1,31: G1,32: Ab1,33: A1,34: Bb1,35: B1,36: C2,37: Db2,38: D2,39: Eb2,40: E2,41: F2,42: Gb2,43: G2,44: Ab2,45: A2,46: Bb2,47: B2,48: C3,49: Db3,50: D3,51: Eb3,52: E3,53: F3,54: Gb3,55: G3,56: Ab3,57: A3,58: Bb3,59: B3,60: C4,61: Db4,62: D4,63: Eb4,64: E4,65: F4,66: Gb4,67: G4,68: Ab4,69: A4,70: Bb4,71: B4,72: C5,73: Db5,74: D5,75: Eb5,76: E5,77: F5,78: Gb5,79: G5,80: Ab5,81: A5,82: Bb5,83: B5,84: C6,85: Db6,86: D6,87: Eb6,88: E6,89: F6,90: Gb6,91: G6,92: Ab6,93: A6,94: Bb6,95: B6,96: C7,97: Db7,98: D7,99: Eb7,100: E7,101: F7,102: Gb7,103: G7,104: Ab7,105: A7,106: Bb7,107: B7,108: C8,109: Db8,110: D8,111: Eb8,112: E8,113: F8,114: Gb8,115: G8,116: Ab8,117: A8,118: Bb8,119: B8,120: C9,121: Db9,122: D9,123: Eb9,124: E9,125: F9,126: Gb9}>Forward
slider4:50<0,127,1{Any,0: C-1,1: Db-1,2: D-1,3: Eb-1,4: E-1,5: F-1,6: Gb-1,7: G-1,8: Ab-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: Db0,14: D0,15: Eb0,16: E0,17: F0,18: Gb0,19: G0,20: Ab0,21: A0,22: Bb0,23: B0,24: C1,25: Db1,26: D1,27: Eb1,28: E1,29: F1,30: Gb1,31: G1,32: Ab1,33: A1,34: Bb1,35: B1,36: C2,37: Db2,38: D2,39: Eb2,40: E2,41: F2,42: Gb2,43: G2,44: Ab2,45: A2,46: Bb2,47: B2,48: C3,49: Db3,50: D3,51: Eb3,52: E3,53: F3,54: Gb3,55: G3,56: Ab3,57: A3,58: Bb3,59: B3,60: C4,61: Db4,62: D4,63: Eb4,64: E4,65: F4,66: Gb4,67: G4,68: Ab4,69: A4,70: Bb4,71: B4,72: C5,73: Db5,74: D5,75: Eb5,76: E5,77: F5,78: Gb5,79: G5,80: Ab5,81: A5,82: Bb5,83: B5,84: C6,85: Db6,86: D6,87: Eb6,88: E6,89: F6,90: Gb6,91: G6,92: Ab6,93: A6,94: Bb6,95: B6,96: C7,97: Db7,98: D7,99: Eb7,100: E7,101: F7,102: Gb7,103: G7,104: Ab7,105: A7,106: Bb7,107: B7,108: C8,109: Db8,110: D8,111: Eb8,112: E8,113: F8,114: Gb8,115: G8,116: Ab8,117: A8,118: Bb8,119: B8,120: C9,121: Db9,122: D9,123: Eb9,124: E9,125: F9,126: Gb9}>Backward

slider6:51<0,127,1{Any,0: C-1,1: Db-1,2: D-1,3: Eb-1,4: E-1,5: F-1,6: Gb-1,7: G-1,8: Ab-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: Db0,14: D0,15: Eb0,16: E0,17: F0,18: Gb0,19: G0,20: Ab0,21: A0,22: Bb0,23: B0,24: C1,25: Db1,26: D1,27: Eb1,28: E1,29: F1,30: Gb1,31: G1,32: Ab1,33: A1,34: Bb1,35: B1,36: C2,37: Db2,38: D2,39: Eb2,40: E2,41: F2,42: Gb2,43: G2,44: Ab2,45: A2,46: Bb2,47: B2,48: C3,49: Db3,50: D3,51: Eb3,52: E3,53: F3,54: Gb3,55: G3,56: Ab3,57: A3,58: Bb3,59: B3,60: C4,61: Db4,62: D4,63: Eb4,64: E4,65: F4,66: Gb4,67: G4,68: Ab4,69: A4,70: Bb4,71: B4,72: C5,73: Db5,74: D5,75: Eb5,76: E5,77: F5,78: Gb5,79: G5,80: Ab5,81: A5,82: Bb5,83: B5,84: C6,85: Db6,86: D6,87: Eb6,88: E6,89: F6,90: Gb6,91: G6,92: Ab6,93: A6,94: Bb6,95: B6,96: C7,97: Db7,98: D7,99: Eb7,100: E7,101: F7,102: Gb7,103: G7,104: Ab7,105: A7,106: Bb7,107: B7,108: C8,109: Db8,110: D8,111: Eb8,112: E8,113: F8,114: Gb8,115: G8,116: Ab8,117: A8,118: Bb8,119: B8,120: C9,121: Db9,122: D9,123: Eb9,124: E9,125: F9,126: Gb9}>Reset

slider10:52<0,127,1{Any,0: C-1,1: Db-1,2: D-1,3: Eb-1,4: E-1,5: F-1,6: Gb-1,7: G-1,8: Ab-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: Db0,14: D0,15: Eb0,16: E0,17: F0,18: Gb0,19: G0,20: Ab0,21: A0,22: Bb0,23: B0,24: C1,25: Db1,26: D1,27: Eb1,28: E1,29: F1,30: Gb1,31: G1,32: Ab1,33: A1,34: Bb1,35: B1,36: C2,37: Db2,38: D2,39: Eb2,40: E2,41: F2,42: Gb2,43: G2,44: Ab2,45: A2,46: Bb2,47: B2,48: C3,49: Db3,50: D3,51: Eb3,52: E3,53: F3,54: Gb3,55: G3,56: Ab3,57: A3,58: Bb3,59: B3,60: C4,61: Db4,62: D4,63: Eb4,64: E4,65: F4,66: Gb4,67: G4,68: Ab4,69: A4,70: Bb4,71: B4,72: C5,73: Db5,74: D5,75: Eb5,76: E5,77: F5,78: Gb5,79: G5,80: Ab5,81: A5,82: Bb5,83: B5,84: C6,85: Db6,86: D6,87: Eb6,88: E6,89: F6,90: Gb6,91: G6,92: Ab6,93: A6,94: Bb6,95: B6,96: C7,97: Db7,98: D7,99: Eb7,100: E7,101: F7,102: Gb7,103: G7,104: Ab7,105: A7,106: Bb7,107: B7,108: C8,109: Db8,110: D8,111: Eb8,112: E8,113: F8,114: Gb8,115: G8,116: Ab8,117: A8,118: Bb8,119: B8,120: C9,121: Db9,122: D9,123: Eb9,124: E9,125: F9,126: Gb9}>Save Cue Point
slider11:53<0,127,1{Any,0: C-1,1: Db-1,2: D-1,3: Eb-1,4: E-1,5: F-1,6: Gb-1,7: G-1,8: Ab-1,9: A-1,10: Bb-1,11: B-1,12: C0,13: Db0,14: D0,15: Eb0,16: E0,17: F0,18: Gb0,19: G0,20: Ab0,21: A0,22: Bb0,23: B0,24: C1,25: Db1,26: D1,27: Eb1,28: E1,29: F1,30: Gb1,31: G1,32: Ab1,33: A1,34: Bb1,35: B1,36: C2,37: Db2,38: D2,39: Eb2,40: E2,41: F2,42: Gb2,43: G2,44: Ab2,45: A2,46: Bb2,47: B2,48: C3,49: Db3,50: D3,51: Eb3,52: E3,53: F3,54: Gb3,55: G3,56: Ab3,57: A3,58: Bb3,59: B3,60: C4,61: Db4,62: D4,63: Eb4,64: E4,65: F4,66: Gb4,67: G4,68: Ab4,69: A4,70: Bb4,71: B4,72: C5,73: Db5,74: D5,75: Eb5,76: E5,77: F5,78: Gb5,79: G5,80: Ab5,81: A5,82: Bb5,83: B5,84: C6,85: Db6,86: D6,87: Eb6,88: E6,89: F6,90: Gb6,91: G6,92: Ab6,93: A6,94: Bb6,95: B6,96: C7,97: Db7,98: D7,99: Eb7,100: E7,101: F7,102: Gb7,103: G7,104: Ab7,105: A7,106: Bb7,107: B7,108: C8,109: Db8,110: D8,111: Eb8,112: E8,113: F8,114: Gb8,115: G8,116: Ab8,117: A8,118: Bb8,119: B8,120: C9,121: Db9,122: D9,123: Eb9,124: E9,125: F9,126: Gb9}>Go to Cue Point

slider15:0<0,1,1{Input,File}>Velocity

slider20:/MIDI Sequences:none:Sequence CSV

////////////////////////////////////////////////////////////////////////////////
@init
statNoteOn = $x90;
statNoteOff = $x80;
seq = 0;
cue = 0;

// File change flags
scaleFile = seqFile -1;

////////////////////////////////////////////////////////////////////////////////
@slider
inChannel = slider1 - 1;

seqFile != slider20 ?
(
  seqFile = slider20;
  seqSize = 0;
  out_on = 0;
  fileHandle = file_open(slider20);
  fileHandle > 0 && file_text(fileHandle) ?
  (
    while
    (
      file_var(fileHandle,seq[seqSize]);
      file_avail(fileHandle) ? seqSize += 1;
    );
    file_close(fileHandle);
  );
);

@gfx 100 32
gfx_setfont(1, "Arial", 20);
gfx_r=1; gfx_b=1; gfx_g=1; gfx_a=1;
gfx_x=gfx_y=5;
gfx_drawstr("Sequence Size: ");
gfx_x = 130;
gfx_drawnumber(seqSize/3,0);

gfx_y += 20; gfx_x = 5;
gfx_drawstr("Current Step: ");
gfx_x = 130;
gfx_drawnumber(out_on/3+1,0);

gfx_y += 20; gfx_x = 5;
gfx_drawstr("Cue Point: ");
gfx_x = 130;
gfx_drawnumber(cue/3+1,0);

gfx_y += 40; gfx_x = 5;
i = 0;
h_seqSize = seqSize/3+1;
loop(h_seqSize,
  out_on/3 == i ? gfx_a=1: gfx_a=0.5;
  gfx_rect(gfx_w/(h_seqSize-1)*i, gfx_y, gfx_w/h_seqSize, gfx_h-gfx_y-20);
  i+=1;
);
////////////////////////////////////////////////////////////////////////////////
@block
while (

  midirecv(offset,msg1,note,vel) ? (

    send = 1;

    // Extract message type and channel
    status = msg1 & $xF0;
    channel = msg1 & $x0F;

    // Define channel out
    chan_out = channel;

    // Is it on our channel?
    channel == inChannel || inChannel == -1 ? (

      // Is it a note event?
      status == statNoteOn || status == statNoteOff ? (

        done = 0;

        // If Forward play
        note + 1 == slider3 || ( slider3 == 0 && note + 1 != slider6 ) ? (

          done = 1;

          // If note on
          status == statNoteOn ? (
            out_on = out_on + 3; // +3 because the file parsing understand each "," as a step (it doesn't parse per line). 3 columns => +3 to go to the next note.
            out_on == seqSize + 1 ? out_on = 0;
            note_out = seq[out_on]; // Get Note Out
            chan_out = seq[out_on+2]; // 3 columns => +2 to go to the last one, but -1 to the midi channel to send MIDI
            slider15 == 1 ? (
              vel_out = seq[out_on+1];
            );
          );

          // If note off
          status == statNoteOff ? (
            out_off = out_off + 3;
            out_off == seqSize + 1 ? out_off = 0;
            note_out = seq[out_on]; // Get Note Out
            chan_out = seq[out_on+2];
            slider15 == 1 ? (
              vel_out = seq[out_on+1];
            );
          );

        );

        // If Backward play
        ( note + 1 == slider4 || slider4 == 0 ) && done == 0 ? (

          done = 1;

          // If note on
          status == statNoteOn ? (
            out_on = out_on - 3;
            out_on < 0 ? out_on = seqSize-2;
            note_out = seq[out_on]; // Get Note Out
            chan_out = seq[out_on+2];
            slider15 == 1 ? (
              vel_out = seq[out_on+1];
            );
          );

          // If note off
          status == statNoteOff ? (
            out_off = out_off - 3;
            out_off < 0 ? out_off = seqSize-2;
            note_out = seq[out_on]; // Get Note Out
            chan_out = seq[out_on+2];
            slider15 == 1 ? (
              vel_out = seq[out_on+1];
            );
          );

        );

        // If Reset
        ( note + 1 == slider6 || slider6 == 0 ) && done == 0 ? (

            done = 1;

            status == statNoteOn ? (
              out_on = 0;
              out_off = 0;
            );

            status == statNoteOff ? (
               midisend(offset, 0xB0 | channel, 123); // All notes off
             );

            send = 0;

        );

        // If Set Cue Point
        ( note + 1 == slider10 || slider10 == 0 ) && done == 0 ? (

            done = 1;

            status == statNoteOn ? (
              cue = out_on
            );

            status == statNoteOff ? (
              midisend(offset, 11*16, msg23);
            );

            send = 0;

        );

        // If Go To Cue Point
        ( note + 1 == slider11 || slider11 == 0 ) && done == 0 ? (

            done = 1;

            status == statNoteOn ? (
              out_on = cue;
              out_off = cue;
            );

            status == statNoteOff ? (
              midisend(offset, 11*16, msg23);
            );

            send = 0;

        ):( // If not note slider

          note_out == note;
          vel_out == vel;

        );

      ); // Stat note_on or note_off

    ); // Channel filter

    // Vel from input or from file
    slider15 == 0 ? ( vel_out = vel );

    // Send the MIDI notes or data
    send ? midisend( offset, status + chan_out, note_out, vel_out );

    1; // Force loop to continue until all messages have been processed

  );

);